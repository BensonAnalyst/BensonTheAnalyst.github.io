
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.79 (8238) aarch64-apple-darwin20]

[History restored from /Users/cheehwapang/.Rapp.history]

> source("/Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May.csv")
Error in source("/Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May.csv") : 
  /Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May:1:8: unexpected ','
1: ride_id,
           ^
> source("/Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May.csv")
Error in source("/Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May.csv") : 
  /Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual/2023May:1:8: unexpected ','
1: ride_id,
           ^
> setwd("Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual")
Error in setwd("Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual") : 
  cannot change working directory
> setwd("/Users/cheehwapang/Downloads/GoogleDataAnalystInCoursera/Case_Study_Bike_Annual_Conversion/Processed_Data_Bike_Annual")
> 
> install.packages("tidyverse")
--- Please select a CRAN mirror for use in this session ---
trying URL 'https://cloud.r-project.org/bin/macosx/big-sur-arm64/contrib/4.3/tidyverse_2.0.0.tgz'
Content type 'application/x-gzip' length 428470 bytes (418 KB)
==================================================
downloaded 418 KB


The downloaded binary packages are in
	/var/folders/x7/n68x_95s0b97b9n7xq4g0fdc0000gn/T//RtmpSYG9ir/downloaded_packages
> library(tidyverse)
── Attaching core tidyverse packages ─────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ───────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> install.packages("lubridate")
trying URL 'https://cloud.r-project.org/bin/macosx/big-sur-arm64/contrib/4.3/lubridate_1.9.2.tgz'
Content type 'application/x-gzip' length 998376 bytes (974 KB)
==================================================
downloaded 974 KB


The downloaded binary packages are in
	/var/folders/x7/n68x_95s0b97b9n7xq4g0fdc0000gn/T//RtmpSYG9ir/downloaded_packages
> library(lubridate)
> install.packages("ggplot")
Warning message:
package ‘ggplot’ is not available for this version of R

A version of this package for your version of R might be available elsewhere,
see the ideas at
https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages 
> install.packages("ggplot2")
trying URL 'https://cloud.r-project.org/bin/macosx/big-sur-arm64/contrib/4.3/ggplot2_3.4.2.tgz'
Content type 'application/x-gzip' length 4302544 bytes (4.1 MB)
==================================================
downloaded 4.1 MB


The downloaded binary packages are in
	/var/folders/x7/n68x_95s0b97b9n7xq4g0fdc0000gn/T//RtmpSYG9ir/downloaded_packages
> library(ggplot2)
> jun_2022<- read_csv("2022Jun.csv")
Rows: 769193 Columns: 15                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, mem...
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> jul_2022<- read_csv("2022Jul.csv")
Rows: 823473 Columns: 15                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, mem...
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> aug_2022<- read_csv("2022Aug.csv")
New names:                                                                                                                           
• `` -> `...16`
• `` -> `...17`
Rows: 785921 Columns: 17
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, mem...
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
lgl  (2): ...16, ...17

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> problems(aug_2022)
# A tibble: 1 × 5
    row   col expected           actual file 
  <int> <int> <chr>              <chr>  <chr>
1    15    17 1/0/T/F/TRUE/FALSE `      ""   
> aug_2022<- read_csv("2022Aug.csv")
Rows: 785921 Columns: 15                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, mem...
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> sep_2022<- read_csv("2022Sep.csv")
Rows: 701336 Columns: 15                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr  (9): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, mem...
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
time (1): ride_length

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> problem(sep_2022)
Error in problem(sep_2022) : could not find function "problem"
> problems(sep_2022)
# A tibble: 126 × 5
     row   col expected        actual    file 
   <int> <int> <chr>           <chr>     <chr>
 1     3    14 time in ISO8601 239:38:00 ""   
 2     5    14 time in ISO8601 119:32:00 ""   
 3     8    14 time in ISO8601 335:05:00 ""   
 4    10    14 time in ISO8601 118:52:00 ""   
 5    14    14 time in ISO8601 118:30:00 ""   
 6    19    14 time in ISO8601 238:19:00 ""   
 7    21    14 time in ISO8601 118:03:00 ""   
 8    26    14 time in ISO8601 213:51:00 ""   
 9    28    14 time in ISO8601 285:50:00 ""   
10    40    14 time in ISO8601 261:11:00 ""   
# ℹ 116 more rows
# ℹ Use `print(n = ...)` to see more rows
> oct_2022<- read_csv("2022Oct.csv")
Rows: 558682 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual, ride_length
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> nov_2022<- read_csv("2022Nov.csv")
Rows: 337697 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual, ride_length
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> dec_2022<- read_csv("2022Dec.csv")
Rows: 181806 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual, ride_length
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> jan_2023<- read_csv("2023Jan.csv")
Rows: 190301 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr (10): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual, ride_length
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> feb_2023<- read_csv("2023Feb.csv")
Rows: 190444 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr  (9): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
time (1): ride_length

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> mar_2023<- read_csv("2023Mar.csv")
Rows: 258678 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr  (9): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
time (1): ride_length

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> apr_2023<- read_csv("2023Apr.csv")
Rows: 426589 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr  (9): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
time (1): ride_length

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> may_2023<- read_csv("2023May.csv")
Rows: 604825 Columns: 15                                                                                                                                                                                             
── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ","
chr  (9): ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, end_station_name, end_station_id, member_casual
dbl  (5): start_lat, start_lng, end_lat, end_lng, day_of_week
time (1): ride_length

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Warning message:
One or more parsing issues, call `problems()` on your data frame for details, e.g.:
  dat <- vroom(...)
  problems(dat) 
> colnames(may_2023)
 [1] "ride_id"            "rideable_type"      "started_at"         "ended_at"           "start_station_name" "start_station_id"   "end_station_name"  
 [8] "end_station_id"     "start_lat"          "start_lng"          "end_lat"            "end_lng"            "member_casual"      "ride_length"       
[15] "day_of_week"       
> colnames(jun_2022)
 [1] "ride_id"            "rideable_type"      "started_at"         "ended_at"           "start_station_name" "start_station_id"   "end_station_name"  
 [8] "end_station_id"     "start_lat"          "start_lng"          "end_lat"            "end_lng"            "member_casual"      "ride_length"       
[15] "day_of_week"       
> str(may_2023)
spc_tbl_ [604,825 × 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:604825] "0D9FA920C3062031" "92485E5FB5888ACD" "FB144B3FC8300187" "DDEB93BC2CE9AA77" ...
 $ rideable_type     : chr [1:604825] "electric_bike" "electric_bike" "electric_bike" "classic_bike" ...
 $ started_at        : chr [1:604825] "7/5/23 19:53" "6/5/23 18:54" "21/5/23 0:40" "10/5/23 16:47" ...
 $ ended_at          : chr [1:604825] "7/5/23 19:58" "6/5/23 19:03" "21/5/23 0:44" "10/5/23 16:59" ...
 $ start_station_name: chr [1:604825] "Southport Ave & Belmont Ave" "Southport Ave & Belmont Ave" "Halsted St & 21st St" "Carpenter St & Huron St" ...
 $ start_station_id  : chr [1:604825] "13229" "13229" "13162" "13196" ...
 $ end_station_name  : chr [1:604825] NA NA NA "Damen Ave & Cortland St" ...
 $ end_station_id    : chr [1:604825] NA NA NA "13133" ...
 $ start_lat         : num [1:604825] 41.9 41.9 41.9 41.9 42 ...
 $ start_lng         : num [1:604825] -87.7 -87.7 -87.6 -87.7 -87.7 ...
 $ end_lat           : num [1:604825] 41.9 41.9 41.9 41.9 41.9 ...
 $ end_lng           : num [1:604825] -87.7 -87.7 -87.7 -87.7 -87.7 ...
 $ member_casual     : chr [1:604825] "member" "member" "member" "member" ...
 $ ride_length       : 'hms' num [1:604825] 00:05:00 00:09:00 00:04:00 00:12:00 ...
  ..- attr(*, "units")= chr "secs"
 $ day_of_week       : num [1:604825] 1 7 1 4 3 3 3 7 2 6 ...
 - attr(*, "spec")=
  .. cols(
  ..   ride_id = col_character(),
  ..   rideable_type = col_character(),
  ..   started_at = col_character(),
  ..   ended_at = col_character(),
  ..   start_station_name = col_character(),
  ..   start_station_id = col_character(),
  ..   end_station_name = col_character(),
  ..   end_station_id = col_character(),
  ..   start_lat = col_double(),
  ..   start_lng = col_double(),
  ..   end_lat = col_double(),
  ..   end_lng = col_double(),
  ..   member_casual = col_character(),
  ..   ride_length = col_time(format = ""),
  ..   day_of_week = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 
> str(jun_2022)
spc_tbl_ [769,193 × 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:769193] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:769193] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:769193] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:769193] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:769193] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:769193] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:769193] NA NA NA NA ...
 $ end_station_id    : chr [1:769193] NA NA NA NA ...
 $ start_lat         : num [1:769193] 41.9 41.9 41.9 41.9 41.7 ...
 $ start_lng         : num [1:769193] -87.6 -87.6 -87.7 -87.6 -87.6 ...
 $ end_lat           : num [1:769193] NA NA NA NA NA NA NA NA NA NA ...
 $ end_lng           : num [1:769193] NA NA NA NA NA NA NA NA NA NA ...
 $ member_casual     : chr [1:769193] "casual" "casual" "casual" "casual" ...
 $ ride_length       : chr [1:769193] "597:01:00" "540:03:00" "518:31:00" "517:04:00" ...
 $ day_of_week       : num [1:769193] 4 6 1 5 1 5 2 7 4 6 ...
 - attr(*, "spec")=
  .. cols(
  ..   ride_id = col_character(),
  ..   rideable_type = col_character(),
  ..   started_at = col_character(),
  ..   ended_at = col_character(),
  ..   start_station_name = col_character(),
  ..   start_station_id = col_character(),
  ..   end_station_name = col_character(),
  ..   end_station_id = col_character(),
  ..   start_lat = col_double(),
  ..   start_lng = col_double(),
  ..   end_lat = col_double(),
  ..   end_lng = col_double(),
  ..   member_casual = col_character(),
  ..   ride_length = col_character(),
  ..   day_of_week = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 
> install.packages("hms")
trying URL 'https://cloud.r-project.org/bin/macosx/big-sur-arm64/contrib/4.3/hms_1.1.3.tgz'
Content type 'application/x-gzip' length 99198 bytes (96 KB)
==================================================
downloaded 96 KB


The downloaded binary packages are in
	/var/folders/x7/n68x_95s0b97b9n7xq4g0fdc0000gn/T//RtmpSYG9ir/downloaded_packages
> jun_2022 <- mutate(jun_2022, ride_length = hms(ride_length))
> str(jun_2022)
tibble [769,193 × 15] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:769193] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:769193] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:769193] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:769193] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:769193] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:769193] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:769193] NA NA NA NA ...
 $ end_station_id    : chr [1:769193] NA NA NA NA ...
 $ start_lat         : num [1:769193] 41.9 41.9 41.9 41.9 41.7 ...
 $ start_lng         : num [1:769193] -87.6 -87.6 -87.7 -87.6 -87.6 ...
 $ end_lat           : num [1:769193] NA NA NA NA NA NA NA NA NA NA ...
 $ end_lng           : num [1:769193] NA NA NA NA NA NA NA NA NA NA ...
 $ member_casual     : chr [1:769193] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:769193] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:769193] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:769193] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:769193] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:769193] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:769193] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:769193] 4 6 1 5 1 5 2 7 4 6 ...
> str(may_2023)
spc_tbl_ [604,825 × 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:604825] "0D9FA920C3062031" "92485E5FB5888ACD" "FB144B3FC8300187" "DDEB93BC2CE9AA77" ...
 $ rideable_type     : chr [1:604825] "electric_bike" "electric_bike" "electric_bike" "classic_bike" ...
 $ started_at        : chr [1:604825] "7/5/23 19:53" "6/5/23 18:54" "21/5/23 0:40" "10/5/23 16:47" ...
 $ ended_at          : chr [1:604825] "7/5/23 19:58" "6/5/23 19:03" "21/5/23 0:44" "10/5/23 16:59" ...
 $ start_station_name: chr [1:604825] "Southport Ave & Belmont Ave" "Southport Ave & Belmont Ave" "Halsted St & 21st St" "Carpenter St & Huron St" ...
 $ start_station_id  : chr [1:604825] "13229" "13229" "13162" "13196" ...
 $ end_station_name  : chr [1:604825] NA NA NA "Damen Ave & Cortland St" ...
 $ end_station_id    : chr [1:604825] NA NA NA "13133" ...
 $ start_lat         : num [1:604825] 41.9 41.9 41.9 41.9 42 ...
 $ start_lng         : num [1:604825] -87.7 -87.7 -87.6 -87.7 -87.7 ...
 $ end_lat           : num [1:604825] 41.9 41.9 41.9 41.9 41.9 ...
 $ end_lng           : num [1:604825] -87.7 -87.7 -87.7 -87.7 -87.7 ...
 $ member_casual     : chr [1:604825] "member" "member" "member" "member" ...
 $ ride_length       : 'hms' num [1:604825] 00:05:00 00:09:00 00:04:00 00:12:00 ...
  ..- attr(*, "units")= chr "secs"
 $ day_of_week       : num [1:604825] 1 7 1 4 3 3 3 7 2 6 ...
 - attr(*, "spec")=
  .. cols(
  ..   ride_id = col_character(),
  ..   rideable_type = col_character(),
  ..   started_at = col_character(),
  ..   ended_at = col_character(),
  ..   start_station_name = col_character(),
  ..   start_station_id = col_character(),
  ..   end_station_name = col_character(),
  ..   end_station_id = col_character(),
  ..   start_lat = col_double(),
  ..   start_lng = col_double(),
  ..   end_lat = col_double(),
  ..   end_lng = col_double(),
  ..   member_casual = col_character(),
  ..   ride_length = col_time(format = ""),
  ..   day_of_week = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 
> may_2023 <- mutate(may_2023, ride_length = hms(ride_length))
Warning message:
There was 1 warning in `mutate()`.
ℹ In argument: `ride_length = hms(ride_length)`.
Caused by warning in `.parse_hms()`:
! Some strings failed to parse, or all strings are NAs 
> str(may_2023)
tibble [604,825 × 15] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:604825] "0D9FA920C3062031" "92485E5FB5888ACD" "FB144B3FC8300187" "DDEB93BC2CE9AA77" ...
 $ rideable_type     : chr [1:604825] "electric_bike" "electric_bike" "electric_bike" "classic_bike" ...
 $ started_at        : chr [1:604825] "7/5/23 19:53" "6/5/23 18:54" "21/5/23 0:40" "10/5/23 16:47" ...
 $ ended_at          : chr [1:604825] "7/5/23 19:58" "6/5/23 19:03" "21/5/23 0:44" "10/5/23 16:59" ...
 $ start_station_name: chr [1:604825] "Southport Ave & Belmont Ave" "Southport Ave & Belmont Ave" "Halsted St & 21st St" "Carpenter St & Huron St" ...
 $ start_station_id  : chr [1:604825] "13229" "13229" "13162" "13196" ...
 $ end_station_name  : chr [1:604825] NA NA NA "Damen Ave & Cortland St" ...
 $ end_station_id    : chr [1:604825] NA NA NA "13133" ...
 $ start_lat         : num [1:604825] 41.9 41.9 41.9 41.9 42 ...
 $ start_lng         : num [1:604825] -87.7 -87.7 -87.6 -87.7 -87.7 ...
 $ end_lat           : num [1:604825] 41.9 41.9 41.9 41.9 41.9 ...
 $ end_lng           : num [1:604825] -87.7 -87.7 -87.7 -87.7 -87.7 ...
 $ member_casual     : chr [1:604825] "member" "member" "member" "member" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:604825] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:604825] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:604825] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:604825] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:604825] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ minute: num [1:604825] 5 9 4 12 9 16 34 5 13 3 ...
 $ day_of_week       : num [1:604825] 1 7 1 4 3 3 3 7 2 6 ...
> apr_2023 <- mutate(apr_2023, ride_length = hms(ride_length))
Warning message:
There was 1 warning in `mutate()`.
ℹ In argument: `ride_length = hms(ride_length)`.
Caused by warning in `.parse_hms()`:
! Some strings failed to parse, or all strings are NAs 
> mar_2023 <- mutate(mar_2023, ride_length = hms(ride_length))
Warning message:
There was 1 warning in `mutate()`.
ℹ In argument: `ride_length = hms(ride_length)`.
Caused by warning in `.parse_hms()`:
! Some strings failed to parse, or all strings are NAs 
> feb_2023 <- mutate(feb_2023, ride_length = hms(ride_length))
Warning message:
There was 1 warning in `mutate()`.
ℹ In argument: `ride_length = hms(ride_length)`.
Caused by warning in `.parse_hms()`:
! Some strings failed to parse, or all strings are NAs 
> jan_2023 <- mutate(jan_2023, ride_length = hms(ride_length))
> dec_2023 <- mutate(dec_2023, ride_length = hms(ride_length))
Error: object 'dec_2023' not found
> dec_2022 <- mutate(dec_2022, ride_length = hms(ride_length))
> nov_2022 <- mutate(nov_2022, ride_length = hms(ride_length))
> oct_2022 <- mutate(oct_2022, ride_length = hms(ride_length))
> sept_2022 <- mutate(sept_2022, ride_length = hms(ride_length))
Error: object 'sept_2022' not found
> sep_2022 <- mutate(sep_2022, ride_length = hms(ride_length))
Warning message:
There was 1 warning in `mutate()`.
ℹ In argument: `ride_length = hms(ride_length)`.
Caused by warning in `.parse_hms()`:
! Some strings failed to parse, or all strings are NAs 
sept_2022 <- mutate(sept_2022, ride_length = hms(ride_length))
> aug_2022 <- mutate(aug_2022, ride_length = hms(ride_length))
> jul_2022 <- mutate(jul_2022, ride_length = hms(ride_length))
> all_trips <- bind_rows(jun_2022, jul_2022, aug_2022, sep_2022, oct_2022, nov_2022, dec_2022, jan_2023, feb_2023, mar_2023, apr_2023, may_2023)
> select(-c(start_lat, start_lng, end_lat, end_lng))
Error: object 'start_lat' not found
> select(-c(start_lat, start_lng, end_lat, end_lng))
Error: object 'start_lat' not found
> select(-c(start_lng, end_lat, end_lng))
Error: object 'start_lng' not found
> all_trips <- all_trips %>%
+ 
+ select(-c(start_lat, start_lng, end_lat, end_lng))
> str(all_trips)
tibble [5,828,945 × 11] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
> colnames(all_trips)
 [1] "ride_id"            "rideable_type"      "started_at"         "ended_at"          
 [5] "start_station_name" "start_station_id"   "end_station_name"   "end_station_id"    
 [9] "member_casual"      "ride_length"        "day_of_week"       
> nrow(all_trips)
[1] 5828945
> dim(all_trips)
[1] 5828945      11
> head(all_trips)
# A tibble: 6 × 11
  ride_id      rideable_type started_at ended_at start_station_name start_station_id end_station_name
  <chr>        <chr>         <chr>      <chr>    <chr>              <chr>            <chr>           
1 94DD1FB2367… docked_bike   15/6/22 7… 10/7/22… Michigan Ave & 14… TA1307000124     <NA>            
2 59F28D6FACE… docked_bike   10/6/22 1… 3/7/22 … Michigan Ave & La… TA1305000011     <NA>            
3 DCB66918A43… docked_bike   19/6/22 1… 11/7/22… Damen Ave & Melro… 13143            <NA>            
4 7A90D43CCAA… docked_bike   9/6/22 15… 1/7/22 … Clark St & Lake St KA1503000012     <NA>            
5 242DE443196… docked_bike   12/6/22 8… 3/7/22 … Commercial Ave & … TA1309000051     <NA>            
6 73F60032C04… docked_bike   9/6/22 10… 30/6/22… Montrose Harbor    TA1308000012     <NA>            
# ℹ 4 more variables: end_station_id <chr>, member_casual <chr>, ride_length <Period>,
#   day_of_week <dbl>
> summary(all_trips)
   ride_id          rideable_type       started_at          ended_at         start_station_name
 Length:5828945     Length:5828945     Length:5828945     Length:5828945     Length:5828945    
 Class :character   Class :character   Class :character   Class :character   Class :character  
 Mode  :character   Mode  :character   Mode  :character   Mode  :character   Mode  :character  
                                                                                               
                                                                                               
                                                                                               
                                                                                               
 start_station_id   end_station_name   end_station_id     member_casual     
 Length:5828945     Length:5828945     Length:5828945     Length:5828945    
 Class :character   Class :character   Class :character   Class :character  
 Mode  :character   Mode  :character   Mode  :character   Mode  :character  
                                                                            
                                                                            
                                                                            
                                                                            
  ride_length                     day_of_week   
 Min.   :0S                      Min.   :1.000  
 1st Qu.:6M 0S                   1st Qu.:2.000  
 Median :10M 0S                  Median :4.000  
 Mean   :18M 10.2411331306832S   Mean   :4.121  
 3rd Qu.:18M 0S                  3rd Qu.:6.000  
 Max.   :28d 17H 47M 0S          Max.   :7.000  
 NA's   :256                                    
> all_trips$date <- as.Date(all_trips$started_at)
> str(all_trips)
tibble [5,828,945 × 12] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "0015-06-22" "0010-06-22" "0019-06-22" ...
> all_trips$month <- format(as.Date(all_trips$date), "%m")
> str(all_trips)
tibble [5,828,945 × 13] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "0015-06-22" "0010-06-22" "0019-06-22" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
> all_trips$day <- format(as.Date(all_trips$date),"%d")
> str(all_trips)
tibble [5,828,945 × 14] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "0015-06-22" "0010-06-22" "0019-06-22" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "22" "22" "22" "22" ...
> all_trips$date <- as.Date(all_trips$started_at, format = "%d/%m/%y")
> str(all_trips)
tibble [5,828,945 × 14] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "22" "22" "22" "22" ...
> all_trips$day <- format(as.Date(all_trips$date),"%d")
> str(all_trips)
tibble [5,828,945 × 14] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
> all_trips$month <- format(as.Date(all_trips$date),"%m")
> str(all_trips)
tibble [5,828,945 × 14] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
> all_trips$year <- format(as.Date(all_trips$date),"%Y")
> str(all_trips)
tibble [5,828,945 × 15] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
> all_trips$day_of_weeks <- format(as.Date(all_trips$date), "%A")
> str(all_trips)
tibble [5,828,945 × 16] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
> all_trips$ride_lengths <- difftime(all_trips$ended_at,all_trips$started_at)
> str(all_trips)
tibble [5,828,945 × 17] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : 'difftime' num [1:5828945] -155185140 -218375820 -249902940 -249908160 ...
  ..- attr(*, "units")= chr "secs"
> is.factor(all_trips$ride_lengths)
[1] FALSE
> all_trips$ride_lengths <- as.numeric(as.character(all_trips$ride_lengths))
> is.numeric(all_trips$ride_lengths)
[1] TRUE
> str(all_trips)
tibble [5,828,945 × 17] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : num [1:5828945] -1.55e+08 -2.18e+08 -2.50e+08 -2.50e+08 -2.82e+08 ...
> all_trips$started_ats <- as.POSIXct(all_trips$started_at, format = "%d/%m/%y %H:%M")
> str(all_trips)
tibble [5,828,945 × 18] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : num [1:5828945] -1.55e+08 -2.18e+08 -2.50e+08 -2.50e+08 -2.82e+08 ...
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
> all_trips$ended_ats <- as.POSIXct(all_trips$ended_at, format = "%d/%m/%y %H:%M")
> all_trips$ride_lengths <- difftime(all_trips$ended_ats, all_trips$started_ats)
> str(all_trips)
tibble [5,828,945 × 19] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : 'difftime' num [1:5828945] 2149260 1944180 1866660 1861440 ...
  ..- attr(*, "units")= chr "secs"
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
 $ ended_ats         : POSIXct[1:5828945], format: "2022-07-10 04:57:00" "2022-07-03 04:16:00" "2022-07-11 04:23:00" ...
> is.factor(all_trips$ride_lengths)
[1] FALSE
> all_trips$ride_lengths <- as.numeric(as.character(all_trips$ride_lengths))
> str(all_trips)
tibble [5,828,945 × 19] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : num [1:5828945] 2149260 1944180 1866660 1861440 1800600 ...
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
 $ ended_ats         : POSIXct[1:5828945], format: "2022-07-10 04:57:00" "2022-07-03 04:16:00" "2022-07-11 04:23:00" ...
> is.numeric(all_trips$ride_lengths)
[1] TRUE
> missing_values <- sum(is.na(all_trips$ride_lengths))
> negative_values <- sum(all_trips$ride_lengths < 0)
> cat("Number of missing values in ride_lengths:", missing_values, "\n")
Number of missing values in ride_lengths: 0 
> cat("Number of negative values in ride_lengths:", negative_values, "\n")
Number of negative values in ride_lengths: 0 
> missing_values <- sum(is.na(all_trips$start_station_name))
> cat("Number of missing values in ride_lengths:", missing_values, "\n")
Number of missing values in ride_lengths: 834524 
> mean(all_trips$ride_lengths)
[1] 1122.775
> median(all_trips$ride_lengths)
[1] 600
> summary(all_trips)
   ride_id          rideable_type       started_at          ended_at         start_station_name
 Length:5828945     Length:5828945     Length:5828945     Length:5828945     Length:5828945    
 Class :character   Class :character   Class :character   Class :character   Class :character  
 Mode  :character   Mode  :character   Mode  :character   Mode  :character   Mode  :character  
                                                                                               
                                                                                               
                                                                                               
                                                                                               
 start_station_id   end_station_name   end_station_id     member_casual     
 Length:5828945     Length:5828945     Length:5828945     Length:5828945    
 Class :character   Class :character   Class :character   Class :character  
 Mode  :character   Mode  :character   Mode  :character   Mode  :character  
                                                                            
                                                                            
                                                                            
                                                                            
  ride_length                     day_of_week         date               month          
 Min.   :0S                      Min.   :1.000   Min.   :2022-06-01   Length:5828945    
 1st Qu.:6M 0S                   1st Qu.:2.000   1st Qu.:2022-07-27   Class :character  
 Median :10M 0S                  Median :4.000   Median :2022-09-23   Mode  :character  
 Mean   :18M 10.2411331306832S   Mean   :4.121   Mean   :2022-10-27                     
 3rd Qu.:18M 0S                  3rd Qu.:6.000   3rd Qu.:2023-02-05                     
 Max.   :28d 17H 47M 0S          Max.   :7.000   Max.   :2023-05-31                     
 NA's   :256                                                                            
     day                year           day_of_weeks        ride_lengths    
 Length:5828945     Length:5828945     Length:5828945     Min.   :      0  
 Class :character   Class :character   Class :character   1st Qu.:    360  
 Mode  :character   Mode  :character   Mode  :character   Median :    600  
                                                          Mean   :   1123  
                                                          3rd Qu.:   1080  
                                                          Max.   :2483220  
                                                                           
  started_ats                       ended_ats                     
 Min.   :2022-06-01 00:00:00.00   Min.   :2022-06-01 00:02:00.00  
 1st Qu.:2022-07-27 14:55:00.00   1st Qu.:2022-07-27 15:16:00.00  
 Median :2022-09-23 07:56:00.00   Median :2022-09-23 08:14:00.00  
 Mean   :2022-10-28 01:02:25.76   Mean   :2022-10-28 01:21:08.53  
 3rd Qu.:2023-02-05 15:36:00.00   3rd Qu.:2023-02-05 15:52:00.00  
 Max.   :2023-05-31 23:59:00.00   Max.   :2023-06-07 23:04:00.00  
                                                                  
> aggregate(all_trips$ride_lengths~all_trips$member_casual, FUN=mean)
  all_trips$member_casual all_trips$ride_lengths
1                  casual              1692.5579
2                  member               748.1976
> summary_stats <- function(x) {
+   c(mean = mean(x), median = median(x), max = max(x), min = min(x))
+ }
> result <- aggregate(ride_length ~ member_casual, data = all_trips_v2, FUN = summary_stats)
Error in eval(m$data, parent.frame()) : object 'all_trips_v2' not found
> 
> # Assuming `all_trips_v2` is your data frame and `ride_length` and `member_casual` are the relevant columns
> 
> # Create a function to calculate multiple summary statistics
> summary_stats <- function(x) {
+   c(mean = mean(x), median = median(x), max = max(x), min = min(x))
+ }
> 
> # Apply the summary_stats function using aggregate()
> result <- aggregate(ride_length ~ member_casual, data = all_trips_v2, FUN = summary_stats)
Error in eval(m$data, parent.frame()) : object 'all_trips_v2' not found
> 
> # Print the results
> print(result)
Error: object 'result' not found
> 
> summary_stats <- function(x) {
+ c(mean = mean(x), median = median(x), max = max(x), min = min(x))}
> result <- aggregate(ride_length ~ member_casual, data = all_trips_v2, FUN = summary_stats)
Error in eval(m$data, parent.frame()) : object 'all_trips_v2' not found
> result <- aggregate(ride_length ~ member_casual, data = all_trips, FUN = summary_stats)
Warning message:
In split.default(e, grp) : data length is not a multiple of split variable
> result <- aggregate(ride_lengths ~ member_casual, data = all_trips, FUN = summary_stats)
> print(result)
  member_casual ride_lengths.mean ride_lengths.median ride_lengths.max ride_lengths.min
1        casual         1692.5579            720.0000     2483220.0000           0.0000
2        member          748.1976            540.0000       93600.0000           0.0000
> str(all_trips)
tibble [5,828,945 × 19] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : chr [1:5828945] "Wednesday" "Friday" "Sunday" "Thursday" ...
 $ ride_lengths      : num [1:5828945] 2149260 1944180 1866660 1861440 1800600 ...
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
 $ ended_ats         : POSIXct[1:5828945], format: "2022-07-10 04:57:00" "2022-07-03 04:16:00" "2022-07-11 04:23:00" ...
> all_trips$day_of_weeks <- ordered(all_trips$day_of_weeks, level=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
> aggregate(all_trips$ride_lengths ~ all_trips$member_casual + all_trips$day_of_weeks, FUN = mean)
   all_trips$member_casual all_trips$day_of_weeks all_trips$ride_lengths
1                   casual                 Sunday              2002.5497
2                   member                 Sunday               830.8729
3                   casual                 Monday              1653.2926
4                   member                 Monday               710.7314
5                   casual                Tuesday              1516.9042
6                   member                Tuesday               718.8952
7                   casual              Wednesday              1436.6161
8                   member              Wednesday               714.8547
9                   casual               Thursday              1462.2117
10                  member               Thursday               721.9866
11                  casual                 Friday              1641.5832
12                  member                 Friday               740.6458
13                  casual               Saturday              1924.7375
14                  member               Saturday               834.6556
> 
> all_trips_v2 %>% 
+   mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()
+ 
+ group_by(member_casual, weekday) %>%  #groups by usertype and weekday
+   summarise(number_of_rides = n()		
+ ,average_duration = mean(ride_length)) %>% 
+ arrange(member_casual, weekday)		
Error: object 'all_trips_v2' not found
> all_trips %>% 
+ +   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+ group_by(member_casual, weekday) %>% 
+ summarise(number_of_rides = n()	
+ ,average_duration = mean(ride_lengths)) %>% 
+  arrange(member_casual, weekday)
Error: object 'started_ats' not found
> all_trips %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday) %>%
+   summarise(number_of_rides = n(), average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday)
`summarise()` has grouped output by 'member_casual'. You can override using the `.groups` argument.
# A tibble: 14 × 4
# Groups:   member_casual [2]
   member_casual weekday number_of_rides average_duration
   <chr>         <ord>             <int>            <dbl>
 1 casual        Sun              375616            2003.
 2 casual        Mon              257823            1653.
 3 casual        Tue              270965            1517.
 4 casual        Wed              291902            1437.
 5 casual        Thu              313340            1462.
 6 casual        Fri              346556            1642.
 7 casual        Sat              455827            1925.
 8 member        Sun              394536             831.
 9 member        Mon              471397             711.
10 member        Tue              552530             719.
11 member        Wed              579335             715.
12 member        Thu              564902             722.
13 member        Fri              501466             741.
14 member        Sat              452750             835.
> all_trips %>%
+ mutate(weekday = wday(started_ats, label =TRUE)) %>%
+ group_by(member_casual, weekday) %>%
+ summarise(number_of_rides = n(), average_duration = mean(ride_lengths)) %>%
+ arrange(member_casual,weekday) %>%
+ ggplot(aes(x=weekday, y = number_of_rides, fill = member_casual))
`summarise()` has grouped output by 'member_casual'. You can override using the `.groups` argument.
> all_trips %>%
+ + mutate(weekday = wday(started_ats, label =TRUE)) %>%
+ + group_by(member_casual, weekday) %>%
+ + summarise(number_of_rides = n(), average_duration = mean(ride_lengths)) %>%
+ + arrange(member_casual,weekday) %>%
+ + ggplot(aes(x=weekday, y = number_of_rides, fill = member_casual)) +
+ geom_col(position = "dodge")
Error: object 'started_ats' not found
> all_trips %>% 
+   mutate(weekday = wday(started_ats, label = TRUE)) %>% 
+   group_by(member_casual, weekday) %>% 
+   summarise(number_of_rides = n()
+             ,average_duration = mean(ride_lengths)) %>% 
+   arrange(member_casual, weekday)  %>% 
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual'. You can override using the `.groups` argument.
Error in UseMethod("depth") : 
  no applicable method for 'depth' applied to an object of class "NULL"
> 
> all_trips %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups` argument.
> 
> all_trips %>% 
+   mutate(weekday = wday(started_ats, label = TRUE)) %>% 
+   group_by(member_casual, weekday) %>% 
+   summarise(number_of_rides = n()
+             ,average_duration = mean(ride_lengths)) %>% 
+   arrange(member_casual, weekday)  %>% 
+   ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual'. You can override using the `.groups` argument.
> 
> all_trips %>%
+   filter(rideable_type != "docked_bike") %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups` argument.
> 
> all_trips %>%
+   filter(rideable_type != "docked_bike") %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups` argument.
> 
> all_trips %>%
+ +   filter(rideable_type != "docked_bike") %>%
+ +   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+ +   group_by(member_casual, weekday, .groups = 'drop') %>%
+ +   summarise(number_of_rides = n(),
+ +             average_duration = mean(ride_lengths)) %>%
Error: unexpected '=' in:
"+   summarise(number_of_rides = n(),
+             average_duration ="
> +   arrange(member_casual, weekday) %>%
+ +   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+ +   geom_col(position = "dodge")
Error: object 'member_casual' not found
> all_trips %>%
+ +   filter(rideable_type != "docked_bike") %>%
+ +   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+ +   group_by(member_casual, weekday, .groups = 'drop') %>%
+ +   summarise(number_of_rides = n(),
+ +             average_duration = mean(ride_lengths)) %>%
Error: unexpected '=' in:
"+   summarise(number_of_rides = n(),
+             average_duration ="
> +   arrange(member_casual, weekday) %>%
+ +   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+ +   geom_col(position = "dodge")
Error: object 'member_casual' not found
> all_trips %>%
+   filter(rideable_type != "docked_bike") %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups`
argument.

> 
> 
> all_trips %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups`
argument.
> 
> all_trips %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups`
argument.
> 
> counts <- aggregate(all_trips$ride_lengths ~ all_trips$member_casual + all_trips$day_of_weeks, FUN = mean)
> write.csv(counts, file = '~/Desktop/avg_ride_length.csv')
> str(all_trips)
tibble [5,828,945 × 19] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : Ord.factor w/ 7 levels "Sunday"<"Monday"<..: 4 6 1 5 1 5 2 7 4 6 ...
 $ ride_lengths      : num [1:5828945] 2149260 1944180 1866660 1861440 1800600 ...
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
 $ ended_ats         : POSIXct[1:5828945], format: "2022-07-10 04:57:00" "2022-07-03 04:16:00" "2022-07-11 04:23:00" ...
> all_trips %>%
+   mutate(weekday = wday(started_at, label = TRUE)) %>%
+   group_by(member_casual, weekday) %>%
+   summarise(number_of_rides = n()) %>%
+   arrange(member_casual, weekday) %>%
+   select(member_casual, day_of_weeks = weekday, number_of_rides)
`summarise()` has grouped output by 'member_casual'. You can override using the `.groups` argument.
# A tibble: 14 × 3
# Groups:   member_casual [2]
   member_casual day_of_weeks number_of_rides
   <chr>         <ord>                  <int>
 1 casual        Sun                   323660
 2 casual        Mon                   356326
 3 casual        Tue                   331425
 4 casual        Wed                   327824
 5 casual        Thu                   332122
 6 casual        Fri                   307079
 7 casual        Sat                   333593
 8 member        Sun                   493381
 9 member        Mon                   519484
10 member        Tue                   496817
11 member        Wed                   479204
12 member        Thu                   506360
13 member        Fri                   505607
14 member        Sat                   516063
s
> 
> str(all_trips)
tibble [5,828,945 × 19] (S3: tbl_df/tbl/data.frame)
 $ ride_id           : chr [1:5828945] "94DD1FB2367EA8B6" "59F28D6FACEC86EB" "DCB66918A43B6B92" "7A90D43CCAAFAAB6" ...
 $ rideable_type     : chr [1:5828945] "docked_bike" "docked_bike" "docked_bike" "docked_bike" ...
 $ started_at        : chr [1:5828945] "15/6/22 7:56" "10/6/22 16:13" "19/6/22 13:52" "9/6/22 15:50" ...
 $ ended_at          : chr [1:5828945] "10/7/22 4:57" "3/7/22 4:16" "11/7/22 4:23" "1/7/22 4:54" ...
 $ start_station_name: chr [1:5828945] "Michigan Ave & 14th St" "Michigan Ave & Lake St" "Damen Ave & Melrose Ave" "Clark St & Lake St" ...
 $ start_station_id  : chr [1:5828945] "TA1307000124" "TA1305000011" "13143" "KA1503000012" ...
 $ end_station_name  : chr [1:5828945] NA NA NA NA ...
 $ end_station_id    : chr [1:5828945] NA NA NA NA ...
 $ member_casual     : chr [1:5828945] "casual" "casual" "casual" "casual" ...
 $ ride_length       :Formal class 'Period' [package "lubridate"] with 6 slots
  .. ..@ .Data : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ year  : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ month : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ day   : num [1:5828945] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..@ hour  : num [1:5828945] 597 540 518 517 500 498 494 461 443 432 ...
  .. ..@ minute: num [1:5828945] 1 3 31 4 10 25 8 32 2 11 ...
 $ day_of_week       : num [1:5828945] 4 6 1 5 1 5 2 7 4 6 ...
 $ date              : Date[1:5828945], format: "2022-06-15" "2022-06-10" "2022-06-19" ...
 $ month             : chr [1:5828945] "06" "06" "06" "06" ...
 $ day               : chr [1:5828945] "15" "10" "19" "09" ...
 $ year              : chr [1:5828945] "2022" "2022" "2022" "2022" ...
 $ day_of_weeks      : Ord.factor w/ 7 levels "Sunday"<"Monday"<..: 4 6 1 5 1 5 2 7 4 6 ...
 $ ride_lengths      : num [1:5828945] 2149260 1944180 1866660 1861440 1800600 ...
 $ started_ats       : POSIXct[1:5828945], format: "2022-06-15 07:56:00" "2022-06-10 16:13:00" "2022-06-19 13:52:00" ...
 $ ended_ats         : POSIXct[1:5828945], format: "2022-07-10 04:57:00" "2022-07-03 04:16:00" "2022-07-11 04:23:00" ...
> all_trips %>%
+   filter(rideable_type != "docked_bike") %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday) %>%
+   ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
+   geom_col(position = "dodge")
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the `.groups`
argument.
> 
> summary_table <- all_trips %>%
+   filter(rideable_type != "docked_bike") %>%
+   mutate(weekday = wday(started_ats, label = TRUE)) %>%
+   group_by(member_casual, weekday, .groups = 'drop') %>%
+   summarise(number_of_rides = n(),
+             average_duration = mean(ride_lengths)) %>%
+   arrange(member_casual, weekday)
`summarise()` has grouped output by 'member_casual', 'weekday'. You can override using the
`.groups` argument.
> 
> summary_table <- as.data.frame(summary_table)
> 
> write.csv(summary_table, file = '~/Desktop/number_of_rides.csv')
> 